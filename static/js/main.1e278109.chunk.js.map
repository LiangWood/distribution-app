{"version":3,"sources":["components/button/Button.js","components/input/Input.js","components/room/Room.js","components/Rooms.js","App.js","index.js"],"names":["Button","name","symbol","handleClick","className","onClick","Input","roomPeople","setInput","disabled","useState","count","setCount","useEffect","preState","e","target","max","type","step","value","min","onChange","event","Number","Room","room","order","setDistribution","distribution","adult","child","input","arr","splice","handleDistribution","Rooms","people","rooms","countReducer","array","key","reduce","r","a","map","index","App","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e278109.chunk.js","sourcesContent":["// import classNames from 'classnames';\nimport '../button/Button.css';\n\nconst Button = ({ name, symbol, handleClick }) => {\n    return (\n        <>\n            <button\n                className={name}\n                onClick={handleClick}\n            >{symbol}</button>\n        </>\n    )\n};\n\nexport default Button;","import React, { useState, useEffect } from 'react';\nimport Button from '../button/Button';\nimport './Input.css';\n\nexport default function Input({ roomPeople, name, setInput, disabled }) {\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        setInput((preState) => ({\n            ...preState,\n            [name]: count,\n        }));\n    }, [count]);\n\n    const inputHandler = (event) => {\n        setCount(Number(event.target.value));\n    }\n\n    const incrementCounter = () => {\n        if (disabled || count >= roomPeople.max) return;\n        setCount(preState => preState + 1);\n    };\n    \n    const decrementCounter = () => {\n        if (count <= 0) return;\n        setCount(preState => preState - 1);\n    };\n\n    const handleClick = (e) => {\n        switch (e.target.className) {\n            case 'increase':\n                incrementCounter();\n                break;\n            case 'decrease':\n                decrementCounter();\n                break;\n            default:\n                return;\n        };\n    };\n\n    return (\n        <>\n            <Button\n                name={'decrease'}\n                symbol={'-'}\n                handleClick={handleClick}\n            />\n            <input\n                className=\"input\"\n                type=\"number\"\n                name={name}\n                step={1}\n                value={count}\n                min={0}\n                max={roomPeople.max || disabled}\n                onChange={inputHandler}\n            />\n            <Button\n                name={'increase'}\n                symbol={'+'}\n                handleClick={handleClick}\n            />\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport Input from '../input/Input';\nimport './Room.css';\n\nexport default function Room({ room, order, setDistribution, distribution, disabled }) {\n    const [input, setInput] = useState({\n        adult: 0,\n        child: 0,\n    });\n\n    useEffect(() => {\n        const handleDistribution = () => {\n            const arr = [...distribution];\n            arr.splice(order, 1, input)\n            setDistribution(arr);\n        };\n        handleDistribution();\n    }, [input])\n\n    return (\n        <>\n        <div className={(order !== 0) ? 'divider' : ''}></div>\n            <div className=\"people\">\n                <div className=\"people__title\">房間: { input.adult + input.child }人</div>\n                <div className=\"people__wrapper\">\n                    <div className=\"people__adult\">\n                        <div className=\"people__adult--title\">\n                            大人\n                            <span>年齡20+</span>\n                        </div>\n                    </div>\n                    <div className=\"people__input\">\n                        <Input\n                            roomPeople={room}\n                            name={'adult'}\n                            setInput={setInput}\n                            disabled={disabled}\n                        />\n                    </div>\n                </div>\n                <div className=\"people__wrapper\">\n                    <div className=\"people__child\">\n                        <div className=\"people__child--title\">\n                            小孩\n                            <span>年齡0+</span>\n                        </div>\n                    </div>\n                    <div className=\"people__input\">\n                        <Input\n                            roomPeople={room}\n                            name={'child'}\n                            setInput={setInput}\n                            disabled={disabled}\n                        />\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nRoom.propTypes = {\n    handleDistribution: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport Room from './room/Room';\n\nconst Rooms = ({ people, rooms }) => {\n    const [distribution, setDistribution] = useState([]);\n\n    useEffect(() => {\n        // console.log(distribution);\n    }, [distribution]);\n\n    const countReducer = (array, key) => array.reduce((r, a) => r + a[key], 0);\n\n    const ifPeopleFilled = () => {\n        const adultSum = countReducer(distribution, 'adult');\n        const childSum = countReducer(distribution, 'child');\n        if (adultSum + childSum >= people) {\n            return true;\n        }\n        return false;\n    }\n    return (\n        rooms.map((room, index) => <Room\n            key={index}\n            room={room}\n            order={index}\n            people={people}\n            distribution={distribution}\n            setDistribution={setDistribution}\n            disabled={ifPeopleFilled()}\n        />)\n    )\n}\n\nRooms.propTypes = {\n    people: PropTypes.number,\n    rooms: PropTypes.arrayOf(PropTypes.shape({\n        min: PropTypes.number,\n        max: PropTypes.number,\n    })),\n};\n\nexport default Rooms;\n\n","import './App.css';\nimport Rooms from './components/Rooms';\n\nconst people = 3;\nconst rooms = [{ min: 1, max: 3 }, { min: 1,  max: 2 }];\n\nfunction App() {\n  return (\n      <div className=\"App\">\n          <div className=\"picker\">\n              <div className=\"info\">住客人數: {people}人 / {rooms.length}房</div>\n              <Rooms people={people} rooms={rooms} />\n          </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}